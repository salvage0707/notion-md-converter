import {
  createCalloutBlock,
  createTextRichText,
  createTransformerContext,
} from "@notion-md-converter/testing";
import { createMarkdownCalloutTransformer } from "./createMarkdownCalloutTransformer";

describe("createMarkdownCalloutTransformer", () => {
  const transformer = createMarkdownCalloutTransformer();

  it("„Ç≥„Éº„É´„Ç¢„Ç¶„Éà„Éñ„É≠„ÉÉ„ÇØ„Çí„Éû„Éº„ÇØ„ÉÄ„Ç¶„É≥ÂΩ¢Âºè„Å´Â§âÊèõ„Åô„Çã", () => {
    const block = createCalloutBlock({
      richText: [
        createTextRichText({
          plainText: "„ÉÜ„Çπ„Éà„É°„ÉÉ„Çª„Éº„Ç∏",
        }),
      ],
      icon: { type: "emoji", emoji: "üö®" },
    });
    const context = createTransformerContext({
      blocks: [block],
    });

    const result = transformer(context);

    expect(result).toBe("\n> „ÉÜ„Çπ„Éà„É°„ÉÉ„Çª„Éº„Ç∏\n");
  });

  it("Á©∫„ÅÆ„Ç≥„Éº„É´„Ç¢„Ç¶„Éà„Éñ„É≠„ÉÉ„ÇØ„ÇíÂ§âÊèõ„Åô„Çã", () => {
    const block = createCalloutBlock({
      richText: [],
      icon: { type: "emoji", emoji: "üö®" },
    });
    const context = createTransformerContext({
      blocks: [block],
    });

    const result = transformer(context);

    expect(result).toBe("\n> \n");
  });

  it("Â≠êË¶ÅÁ¥†„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØÂ≠êË¶ÅÁ¥†„ÇÇÂ§âÊèõ„Åô„Çã", () => {
    const block = createCalloutBlock({
      richText: [
        createTextRichText({
          plainText: "Ë¶™„É°„ÉÉ„Çª„Éº„Ç∏",
        }),
      ],
      icon: { type: "emoji", emoji: "üìù" },
      children: [
        createCalloutBlock({
          richText: [
            createTextRichText({
              plainText: "Â≠ê„É°„ÉÉ„Çª„Éº„Ç∏",
            }),
          ],
        }),
      ],
    });
    const context = createTransformerContext({
      blocks: [block],
    });

    context.mockedExecute.mockReturnValue("Â≠ê„É°„ÉÉ„Çª„Éº„Ç∏");
    const result = transformer(context);

    expect(result).toBe("\n> Ë¶™„É°„ÉÉ„Çª„Éº„Ç∏\n> Â≠ê„É°„ÉÉ„Çª„Éº„Ç∏\n");
    expect(context.mockedExecute).toHaveBeenCalledWith(block.children);
  });
});
